@charset "utf-8";
/* -------------------------------------------------------------------------------------------------
   基本パーツ

   History:
   0.01.00 2024/02/05 作成。
   0.04.00 2024/02/10 テキストボックスの表示用を実装。
                      エリアの行の高さを、テキストボックスへ合わせて調整。
                      エリアのセルに対して、右寄せ/中央寄せ用のクラスを実装。
                      非表示クラスを実装。
   0.08.00 2024/02/27 セレクトボックス/ラジオボタンを追加。
   0.14.00 2024/03/14 見出しh1を追加。
   0.15.00 2024/03/15 flexのよく使う処理をクラス化。
   0.18.02 2024/04/04 テーブルを追加。
   0.18.03 2024/04/09 テーブルの左/中央/右寄せ、リンクボタンを追加。
   0.19.00 2024/04/16 flex行の上寄せを追加。
                      数値用のテキストボックス/テキストエリア/チェックボックスを追加。
   0.20.00 2024/04/23 数値用のテキストボックスのスピンボタンを非表示へ変更。
                      頁切替のスタイルを追加。
   0.21.00 2024/04/24 ブロックに対して、下寄せ用のクラスを実装。
   0.22.00 2024/05/17 更新ボタン/警告付き更新ボタンを追加。高さの標準値を25pxへ変更。
------------------------------------------------------------------------------------------------- */
/* ---------------------------------------------------------------------------------------------- */
/* 変数定義 */
:root {
    /* 既定値 */
    --tsubasaLib-default-font-family: sans-serif;
    --tsubasaLib-default-font-size: 14px;
    /* ローカル変数 */
    --tsubasaLib-font-family:
        var(--tsubasaLib-setting-font-family, var(--tsubasaLib-default-font-family));
    --tsubasaLib-font-size:
        var(--tsubasaLib-setting-font-size, var(--tsubasaLib-default-font-size));
    --tsubasaLib-h1-font-size:
        calc(var(--tsubasaLib-font-size) * 1.5);
}
/* ---------------------------------------------------------------------------------------------- */
/* BODY */
body {
    margin: 0;
    font-family: var(--tsubasaLib-font-family);
    font-size: var(--tsubasaLib-font-size);
    overflow-wrap: break-word;
}

/* ---------------------------------------------------------------------------------------------- */
/* ブロック */
div,
form,
section,
header,
footer {
    text-wrap: nowrap;
}

div.valign-middle,
form.valign-middle,
section.valign-middle,
header.valign-middle,
footer.valign-middle {
    margin-top: auto;
    margin-bottom: auto;
}

.flex-row {
    display: flex;
}

.flex-column {
    display: flex;
    flex-direction: column;
}

.flex-central {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.flex-row > .auto-grow,
.flex-column > .auto-grow {
    flex: 1 0 0;
}

.flex-row > .auto-fit,
.flex-column > .auto-fit {
    flex: 1 1 0;
}

.flex-row > .top {
    align-self: flex-start;
}

.flex-row > .bottom {
    align-self: flex-end;
}

/* ---------------------------------------------------------------------------------------------- */
/* 見出し */
h1 {
    margin: 10px 0 0 0;
    font-size: var(--tsubasaLib-h1-font-size);
}

/* ---------------------------------------------------------------------------------------------- */
/* ラベル */
label.required::after {
    content: "*";
    color: red;
}

/* ---------------------------------------------------------------------------------------------- */
/* テキストボックス */
input[type="text"],
input[type="password"],
input[type="number"] {
    width: 180px;
    height: 23px;
    border: solid 1px rgb(133, 133, 133);
    font-family: var(--tsubasaLib-font-family);
    font-size: var(--tsubasaLib-font-size);
    padding: 0 3px;
}

input[type="text"].error,
input[type="password"].error,
input[type="number"].error {
    background-color: pink;
}

/* 表示項目用 */
input[type="text"]:disabled,
input[type="password"]:disabled,
input[type="number"]:disabled {
    color: inherit;
    border-color: transparent;
    background-color: transparent;
}

/* 数値は右寄せ */
input[type="text"].number,
input[type="number"] {
    text-align: right;
}

/* 数値のスピンボタンを非表示 */
/* Chrome、Safari用 */
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
    appearance: none;
}

/* FireFox用 */
input[type="number"] {
    appearance: textfield;
}
/* ---------------------------------------------------------------------------------------------- */
/* テキストエリア */
textarea {
    resize: none;
    border: solid 1px rgb(133, 133, 133);
    font-family: var(--tsubasaLib-font-family);
    font-size: var(--tsubasaLib-font-size);
    padding: 0 4px;
}

textarea.error {
    background-color: pink;
}

textarea:disabled {
    color: inherit;
    border-color: transparent;
    background-color: transparent;
}

/* ---------------------------------------------------------------------------------------------- */
/* セレクトボックス */
select {
    font-family: var(--tsubasaLib-font-family);
    font-size: var(--tsubasaLib-font-size);
    padding: 0;
}

select.error {
    background-color: pink;
}

select:disabled {
    color: inherit;
    opacity: inherit;
    border-color: transparent;
    background-color: transparent;
}

select:not(:disabled):hover {
    cursor: pointer;
}

select > option:nth-child(odd) {
    background-color: white;
}

select > option:nth-child(even) {
    background-color: lightgray;
}

/* ---------------------------------------------------------------------------------------------- */
/* チェックボックス */
input[type="checkbox"] {
    height: 13px;
    margin: 0 3px;
}

label:has(input[type="checkbox"]) {
    height: 25px;
    display: inline-flex;
    align-items: center;
}

label:has(input[type="checkbox"].error) {
    background-color: pink;
}

input[type="checkbox"]:not(:disabled):hover,
label:has(> input[type="checkbox"]:not(:disabled)):hover {
    cursor: pointer;
}

/* ---------------------------------------------------------------------------------------------- */
/* ラジオボタン */
input[type="radio"] {
    height: 13px;
    margin: 0 3px;
}

label:has(input[type="radio"]) {
    height: 25px;
    display: inline-flex;
    align-items: center;
}

.radioList:has(> label:first-child > input[type="radio"].error) {
    background-color: pink;
}

input[type="radio"]:not(:disabled):hover,
label:has(> input[type="radio"]:not(:disabled)):hover {
    cursor: pointer;
}

/* ---------------------------------------------------------------------------------------------- */
/* ボタン */
input[type="button"],
input[type="submit"],
button {
    font-family: var(--tsubasaLib-font-family);
    font-size: var(--tsubasaLib-setting-font-size-button, 12px);
    height: 25px;
    padding: 0 3px;
}

input[type="button"]:not(:disabled):hover,
input[type="submit"]:not(:disabled):hover,
button:not(:disabled):hover {
    cursor: pointer;
}

/* 更新ボタン */
input[type="button"]:not(:disabled).update,
input[type="submit"]:not(:disabled).update,
button:not(:disabled).update {
    font-weight: bold;
    color: blue;
}

/* 警告付き更新ボタン */
input[type="button"]:not(:disabled).update.warning,
input[type="submit"]:not(:disabled).update.warning,
button:not(:disabled).update.warning {
    color: red;
}

/* リンクボタン */
input[type="button"].link,
input[type="submit"].link,
button.link {
    border: 0;
    background-color: transparent;
    min-width: unset;
    text-decoration: underline;
    font-family: var(--tsubasaLib-font-family);
    font-size: var(--tsubasaLib-font-size);
    color: blue;
}

/* ---------------------------------------------------------------------------------------------- */
/* テーブル */
/* 全体 */
table {
    border-collapse: collapse;
    table-layout: fixed;
}

table > tbody > tr > th,
table > tbody > tr > td {
    padding: 0;
}

table.list.general > tbody > tr > *:nth-child(n+1) {
    padding-left: 3px;
}

/* ヘッダ行 */
table.list.general > tbody > tr > th {
    text-align: left;
    background-color: silver;
}

table.list.general > tbody:has(> tr:first-child > th):not(:has(> tr:nth-child(2) > th))
    > tr:first-child > th {
    border-top: 1px black solid;
}

table.list.general > tbody:has(> tr:first-child > th):not(:has(> tr:nth-child(2) > th))
    > tr:first-child > th {
    border-bottom: 1px black solid;
}

/* 行の高さ */
/* 25px未満に設定すると、セルの中身にぎりぎりの高さのものを配置した時に、高さを延長調整されてしまうため */
table.list.general > tbody > tr > th,
table.list.general > tbody > tr > td {
    height: 25px;
    vertical-align: middle;
}

/* 偶数の明細行 */
table.list.general > tbody:not(:has(> tr:first-child > th))
    > tr:nth-child(2n):not(.selected) > td,
table.list.general > tbody:has(> tr:first-child > th):not(:has(> tr:nth-child(2) > th))
    > tr:nth-child(2n+1):not(.selected) > td,
table.list.general > tbody:has(> tr:first-child > th):has(> tr:nth-child(2) > th)
    > tr:nth-child(2n+2):not(.selected) > td {
    background-color: lightgray;
}

/* 選択行 */
table.list > tbody > tr.selected > td {
    background-color: lightgreen;
}

/* セルの左/中央/右寄せ */
td.left, th.left {
    text-align: left;
}

td.center, th.center {
    text-align: center;
}

td.right, th.right {
    text-align: right;
}

/* 明細上の入力項目 */
/* テキストボックス */
table.list.general input[type="text"] {
    height: 23px;
}

table.list.general input[type="text"]:not(:disabled):not(.error) {
    background-color: rgba(255, 255, 255, 0.4);
}

/* ボタン */
table.list.general input[type="button"],
table.list.general button {
    height: 25px;
}

/* 頁切替 */
.pager {
    display: flex;
}

.pager > div:first-child,
.pager > div:last-child {
    flex: 0 0 25px;
}

.pager > div:nth-child(2) {
    flex: 0 0 50px;

    display: flex;
    justify-content: center;
    align-items: center;
}
/* ---------------------------------------------------------------------------------------------- */
/* エリア */
/* 全体 */
.area {
    padding: 5px;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

/* 行 */
.area > div {
    display: flex;
    min-height: 30px;
}

/* 列 */
.area > div > div {
    display: flex;
}

/* 最終列 */
.area > div > div:last-child {
    flex-grow: 1;
}

/* 縦を中央寄せ */
.area > div > div > * {
    margin-top: auto;
    margin-bottom: auto;
}

/* 右寄せ */
.area > div > div.right {
    justify-content: flex-end;
}

/* 中央寄せ */
.area > div > div.center {
    justify-content: center;
}

/* ---------------------------------------------------------------------------------------------- */
/* その他 */
/* 非表示(レイアウトは詰めない) */
.hidden {
    visibility: hidden;
}

/* 非表示(レイアウトを詰める) */
.none {
    display: none;
}